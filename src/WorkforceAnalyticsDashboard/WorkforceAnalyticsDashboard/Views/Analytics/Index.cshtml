@model WorkforceAnalyticsDashboard.Models.AnalyticsViewModel
@using System.Text.Json

@{
    ViewData["Title"] = "Analytics";
}

<div class="container mt-4">
    <h2 class="mb-4">Workforce Analytics Dashboard</h2>

    <div class="row mb-4">
        <!-- KPI Cards -->
        <div class="col-md-3 mb-2">
            <div class="card text-dark shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Total Employees</h5>
                    <p class="card-text">@Model.TotalEmployees</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-2">
            <div class="card text-dark shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Average Tenure</h5>
                    <p class="card-text">@Model.AverageTenure years</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-2">
            <div class="card text-dark shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Turnover Rate</h5>
                    <p class="card-text">@Model.TurnoverRate %</p>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-2">
            <div class="card text-dark shadow-sm">
                <div class="card-body">
                    <h5 class="card-title">Average Salary</h5>
                    <p class="card-text">@Model.AverageSalary.ToString("C")</p>
                </div>
            </div>
        </div>
        <!-- Add more KPIs as needed -->
    </div>

    <div class="row">
        <div class="col-md-6 mt-4">
            <h5>Employees by Department</h5>
            <canvas id="departmentChart"></canvas>
        </div>
        <div class="col-md-6 mt-4">
            <h5>Hires Over Time</h5>
            <canvas id="hiresOverTimeChart"></canvas>
        </div>
    </div>
</div>

<!-- Chart.js CDN -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    const deptLabels = @Html.Raw(JsonSerializer.Serialize(Model.EmployeesByDepartment.Keys));
    const deptData = @Html.Raw(JsonSerializer.Serialize(Model.EmployeesByDepartment.Values));

    new Chart(document.getElementById("departmentChart"), {
        type: 'bar',
        data: {
            labels: deptLabels,
            datasets: [{
                label: '# of Employees',
                data: deptData,
                backgroundColor: [
                    'rgba(255, 99, 132, 0.6)',
                    'rgba(54, 162, 235, 0.6)',
                    'rgba(255, 206, 86, 0.6)',
                    'rgba(75, 192, 192, 0.6)',
                    'rgba(153, 102, 255, 0.6)',
                    'rgba(255, 159, 64, 0.6)',
                    'rgba(100, 200, 100, 0.6)',
                    'rgba(255, 99, 255, 0.6)',
                    'rgba(99, 255, 132, 0.6)',
                    'rgba(132, 99, 255, 0.6)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: { display: false },
                title: { display: false }
            }
        }
    });

    const hiresTimeLabels = @Html.Raw(JsonSerializer.Serialize(Model.HiresOverTime.Keys));
    const hiresTimeData = @Html.Raw(JsonSerializer.Serialize(Model.HiresOverTime.Values));

    new Chart(document.getElementById("hiresOverTimeChart"), {
        type: 'line',
        data: {
            labels: hiresTimeLabels,
            datasets: [{
                label: 'Number of Hires',
                data: hiresTimeData,
                fill: true,
                borderColor: 'rgba(75, 192, 192, 1)',
                backgroundColor: 'rgba(75, 192, 192, 0.2)',
                tension: 0.3
            }]
        },
        options: {
            responsive: true,
            plugins: {
                title: { display: false }
            },
            scales: {
                y: {
                    beginAtZero: true
                },
                x: {
                    ticks: {
                        maxRotation: 45,
                        minRotation: 0
                    }
                }
            }
        }
    });
</script>
